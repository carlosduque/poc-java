<?xml version="1.0" encoding="UTF-8"?>
<project name="hibernate-demo" default="default" basedir="."
  xmlns:ivy="antlib:org.apache.ivy.ant">

  <description>Hibernate Demo</description>

  <!-- ==================================================== -->
  <!-- === Common settings ================================ -->
  <!-- ==================================================== -->
  <property file="build.properties" />
  <property file="build.info" />

  <property name="lib.dir" location="lib" />
  <property name="target.dir" location="dist" />
  <property name="build.dir" location="build" />

  <property name="main.src.dir" location="src/main/java" />
  <property name="main.classes.dir" location="${build.dir}/main/classes" />
  <property name="main.metainf.dir" location="${main.classes.dir}/META-INF" />

  <property name="main.conf.dir" value="src/main/resources" />

  <property name="test.src.dir" location="src/test/java/" />
  <property name="test.classes.dir" location="${build.dir}/test/classes" />
  <property name="test.metainf.dir" location="${test.classes.dir}/META-INF" />
  <property name="test.report.data.dir" location="${build.dir}/test/reports/xml" />
  <property name="test.report.dir" location="${build.dir}/test/reports/html" />

  <property name="ivy.report.dir" location="${build.dir}/ivy/reports/html" />

  <!-- Libraries -->
  <property name="compile.lib.dir" location="${lib.dir}/compile" />
  <property name="test.lib.dir" location="${lib.dir}/test" />

  <!-- ivy properties used -->
  <property file="${ivy.settings.dir}/ivysettings.properties" />

  <!-- ==================================================== -->
  <!-- === Classpaths ===================================== -->
  <!-- ==================================================== -->
  <path id="compile.libs.classpath">
    <fileset dir="${compile.lib.dir}">
      <include name="*.jar" />
    </fileset>
  </path>

  <path id="test.libs.classpath">
    <fileset dir="${test.lib.dir}">
      <include name="*.jar" />
    </fileset>
  </path>

  <path id="artifacts.classpath">
    <fileset dir="${target.dir}">
      <include name="*.jar" />
    </fileset>
  </path>

  <!-- ==================================================== -->
  <!-- === Targets ======================================== -->
  <!-- ==================================================== -->
  <target name="clean" description="Remove automatically generated directories">
    <delete dir="${target.dir}" />
    <delete dir="${main.classes.dir}" />
    <delete dir="${main.metainf.dir}" />
    <delete dir="${test.classes.dir}" />
    <delete dir="${test.metainf.dir}" />
    <delete dir="${test.report.data.dir}" />
    <delete dir="${test.report.dir}" />
    <delete dir="${ivy.report.dir}" />
    <delete dir="${build.dir}" />
  </target>

  <target name="clean-libs" description="Remove 3rd party libs">
      <delete dir="${lib.dir}" />
      <mkdir dir="${lib.dir}" />
  </target>

  <target name="init" description="Create the directory structure">
    <mkdir dir="${target.dir}" />
    <mkdir dir="${main.classes.dir}" />
    <mkdir dir="${main.metainf.dir}" />
    <mkdir dir="${test.classes.dir}" />
    <mkdir dir="${test.metainf.dir}" />
    <mkdir dir="${test.report.data.dir}" />
    <mkdir dir="${test.report.dir}" />
    <mkdir dir="${ivy.report.dir}" />
    <tstamp>
      <format property="NOW" pattern="yyyy-MM-dd HH:mm:sss" />
    </tstamp>
    <propertyfile file="build.info" comment="This file is automatically generated - DO NOT EDIT">
      <entry key="build.user" value="${user.name}" />
      <entry key="build.date" value="${NOW}" />
      <entry key="build.number" type="int" operation="+" default="000" pattern="000" />
      <entry key="build.id" value="${project.ver}.${build.number}" />
    </propertyfile>
    <property file="build.info" />
    <property name="main.jar.filename" value="${ant.project.name}-${build.id}.jar" />
    <property name="test.jar.filename" value="${ant.project.name}-${build.id}-tests.jar" />
  </target>

  <target name="ivy-init" description="--> Resolve dependencies using Ivy">
    <ivy:configure file="${ivy.settings.dir}/ivysettings.xml" />
    <ivy:resolve />
    <ivy:retrieve pattern="${lib.dir}/[conf]/[artifact]-[revision].[ext]" sync="true"/>
  </target>

  <target name="ivy-report" depends="ivy-init" description="--> Generates a report of dependencies">
    <ivy:report todir="${ivy.report.dir}"/>
  </target>

  <target name="compile" depends="init" description="Compile the source code">
    <javac destdir="${main.classes.dir}" 
           source="${java.compiler.ver}" 
           target="${java.compiler.ver}" 
           debug="${java.compiler.debug}"
           includeAntRuntime="false">
      <src path="${main.src.dir}" />
      <classpath refid="compile.libs.classpath"/>
    </javac>
  </target>

  <target name="package-jar" depends="compile" description="Build the main jar file">
    <manifest file="${main.metainf.dir}/MANIFEST.MF">
      <attribute name="Built-By" value="${user.name}" />
      <attribute name="Implementation-Version" value="${build.id}" />
      <attribute name="Built-Date" value="${NOW}" />
    </manifest>
    <jar
      jarfile="${target.dir}/${main.jar.filename}"
      basedir="${main.classes.dir}"
      manifest="${main.metainf.dir}/MANIFEST.MF">
      <fileset dir="${main.conf.dir}" />
    </jar>
  </target>

  <target name="compile-tests" depends="package-jar" description="Compile the tests source code">
    <javac destdir="${test.classes.dir}" 
           source="${java.compiler.ver}" 
           target="${java.compiler.ver}" 
           debug="${java.compiler.debug}"
           includeAntRuntime="false">
      <src path="${test.src.dir}" />
      <!-- To compile the tests use the final artifact (jar), not the compiled classes.-->
      <classpath refid="test.libs.classpath"/>
      <classpath refid="artifacts.classpath"/>
    </javac>
  </target>

  <target name="package-tests" depends="compile-tests" description="Build the jar file with tests only">
    <manifest file="${test.metainf.dir}/MANIFEST.MF">
      <attribute name="Built-By" value="${user.name}" />
      <attribute name="Implementation-Version" value="${build.id}" />
      <attribute name="Built-Date" value="${NOW}" />
      <attribute name="Main-Class" value="" />
    </manifest>
    <jar
      jarfile="${target.dir}/${test.jar.filename}" 
      basedir="${test.classes.dir}"
      manifest="${test.metainf.dir}/MANIFEST.MF"> 
    </jar>
  </target>

  <target name="test" depends="package-tests" description="Run all the tests">
    <junit printsummary="true" 
      fork="true" 
      forkMode="once"
      haltonfailure="false"
      errorProperty="test.failed.flag"
      failureProperty="test.failed.flag">
      <classpath>
        <path refid="test.libs.classpath" />
        <path refid="compile.libs.classpath" />
        <path refid="artifacts.classpath" />
      </classpath>
      <formatter type="brief" usefile="false" />
      <formatter type="xml" />
      <batchtest todir="${test.report.data.dir}">
        <resources>
          <zipfileset src="${target.dir}/${test.jar.filename}" includes="**/*Test.class"/>
        </resources>
      </batchtest>
    </junit>
    <!-- Create html files using xsl from previously generated xml junit reports-->
    <junitreport todir="${test.report.data.dir}"> 
        <fileset dir="${test.report.data.dir}"> 
            <include name="TEST-*.xml"/> 
        </fileset> 
        <report format="frames" todir="${test.report.dir}"/> 
    </junitreport>
    <!-- halt if the tests failed -->
    <fail if="test.failed.flag">Tests failed. Check reports at: ${test.report.dir}</fail>
  </target>

  <target name="ivy-publish" depends="ivy-report,test" description="--> Publish this project to the ivy repository">
    <delete file="${build.dir}/ivy.xml"/>
    <ivy:publish artifactspattern="${target.dir}/[artifact]-[revision].[ext]" 
	  resolver="projects"
	  pubrevision="${build.id}" 
      status="release" 
      overwrite="true" />
    <echo message="Project ${ant.project.name} released with version ${build.id}" />
  </target>

  <target name="default" depends="ivy-publish" description="Run all the required targets to test, build the jar and publish it to ivy's repository">
  </target>

</project>
